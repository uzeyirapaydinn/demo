@model UserManagerModule.TopicWorkflowsData
@{
    string title =  "UserManagerModule.TopicWorkflows List".SplitCamelCaseToString();
    string headerKey = "Header";
    TempData["Title"] = title;
    int startIndex = ((Model.CurrentPage - 1) * Model.PageSize) + 1;
    int endIndex = ((Model.CurrentPage ) * Model.PageSize);
    if (endIndex > Model.NumberOfRecord) {
        endIndex = Model.NumberOfRecord;
    }

    var pagerData = new PagerData() { CurrentPage = Model.CurrentPage, NumberOfRecord = Model.NumberOfRecord, PageSize = Model.PageSize, TotalPage = Model.TotalPage, StartIndex = startIndex, EndIndex = endIndex } ;
}
<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Kafka Events - Topic Workflows</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="card" IsPageAvailable="true">
            <div class="card-body">
                <div class="container-fluid" IsPageAvailable="true">
                    <form method="post" id="formList">
                        <div class="card text shadow mb-4">
            
                            <div class="card-body">
                                <h1 class="card-title">@title</h1>
                                <p class="card-text">You can manage your UserManagerModule.TopicWorkflows table.</p>
                                <vc:insert-button controller-name="" action-name=""></vc:insert-button>
                                <hr class="col-xs-12">
                                @if (Model.List.Count == 0)
                                {
                                    <div class="alert alert-danger" role="alert">
                                        No Data available in UserManagerModule.TopicWorkflows table.
                                    </div>
                                }
                                else
                                {
                                    <vc:pager pager-data=pagerData></vc:pager>
                                    <table bc-border="Bordered" bc-striped="true" bc-hover="true" class="table-responsive" bc-theme="Light">
                                        <thead bc-theme="Dark">
                                        <tr>
                                            <vc:operation-buttons item-id=@headerKey controller-name="" action-name=""></vc:operation-buttons>
                                            <th>Id</th>
                                            <th>Kafka Event Id</th>
                                            <th>Workflow Content</th>

                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach (var item in Model.List)
                                        {
                                            <tr>
                                                <vc:operation-buttons item-id=@item._Key controller-name="" action-name=""></vc:operation-buttons>
                                                <td>@item.Id</td>
                                                <td>			@string.Format("{0}", Model.ComboList["KafkaEvents"].GetListItemByItemId(item.KafkaEventId))</td>
                                                <td>@item.WorkflowContent</td>

                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                }
                            </div>
                            @if (Model.List.Count > 0)
                            {
                                <div class="card-footer text-muted">
                                    <vc:pager pager-data=pagerData></vc:pager>
                                </div>
                            }
                        </div>
                        <input type="hidden" asp-for="CurrentPage" />
                        <input type="hidden" asp-for="SelectedKey" />
                    </form>

       
    
                </div>
                <div class="container-fluid" IsPageAvailable="false">
                    @await Html.PartialAsync("_NotAuthorized")
                </div>
            </div>
        </div>
    </div>
</div>
<script src="/js/bootstrap-toggle.js"></script>
<script src="/js/site.js"></script>
<script type="text/javascript">
    window.addEventListener('load', (event) => {
     $("img.lazyload").lazyload();
    });
</script>

